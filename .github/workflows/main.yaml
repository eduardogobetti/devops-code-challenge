name: ci

on:
  pull_request:
    branches:
      - main

jobs:
  test_code:
    name: Test Code App
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
          node-version: 18
          
    - name: Add Eslint
      working-directory: ./app
      run: npm install -g eslint
      
    - name: Configure Eslint
      working-directory: ./app
      run: npm init @eslint/config
      
    - name: Code Linting
      working-directory: ./app
      run: npm run lint

  ci:
      name: Build Container
      runs-on: ubuntu-latest
      needs: [test_code]
      steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: eduardogobetti/devops-code-challenge:latest, eduardogobetti/devops-code-challenge:v${{github.run_number}}

  cd:
    name: Deploy K8s
    runs-on: ubuntu-latest
    needs: [test_code, ci]
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Kubernetes Set Context
      uses: Azure/k8s-set-context@v3.0
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.K8S_CONFIG }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1 

    - name: Deploy to EKS
      working-directory: ./k8s
      run: |
        kubectl apply -f deployment.yml
        kubectl apply -f service.yml          